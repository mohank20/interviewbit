int Solution::longestSubsequenceLength(const vector<int> &A) {
    int n=A.size();
    vector<int> dp(n,1),dp2(n,1); 
    for(int i=1;i<n;i++){
        for(int j=0;j<i;j++){
            if(A[j]<A[i]) dp[i]=max(dp[i],1+dp[j]);
        }
    }
    for(int i=n-2;i>=0;i--){
        for(int j=n-1;j>i;j--){
            if(A[j]<A[i]) dp2[i]=max(dp2[i],1+dp2[j]);
        }
    }
    int len=0;
    for(int i=0;i<n;i++){
        len=max(len,dp[i]+dp2[i]-1);
    }
    return len;
}
